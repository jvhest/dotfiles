#!/usr/bin/env bash

# script name: dm-usbmount
# Description: Mount/unmount usb drives using dmenu. No fancy daemon required.
# Dependencies: dmenu

# Set with the flags "-e", "-u","-o pipefail" cause the script to fail
# if certain things happen, which is a good thing.  Otherwise, we can
# get hidden bugs that are hard to discover.
set -euo pipefail

input() {
    echo $(printf $1 | rofi -sep '|' -dmenu -p "$2: ")
}

mount() {
  mountable="$(lsblk -lp | awk '/^\/dev\/sd.*part $/ { print $1 " ("$4")" }')"
  if [ "$mountable" == "" ]; then
    notify-send "Usb-mount" "no drives to mount."
    exit 1
  fi

  # chosen="$(printf '%s' "$mountable" | rofi -dmenu -p "Choose drive to mount: " )"
  chosen=$(input $mountable "Choose drive to mount")
  if [[ $(input "No|Yes" $chosen) == "Yes" ]]; then
    udisksctl mount -b "${chosen%% *}"
    notify-send "Usb-mount" "usb-device ${chosen%% *} mounted"
  fi
}

unmount() {
  mounted="$(lsblk -lp | grep 'media')"
  if [ "$mounted" == "" ]; then
    notify-send "Usb-mount" "no drives to unmount."
    exit 1
  fi

  # chosen="$(printf '%s' "${mounted}" | rofi -dmenu -p "Choose drive to unmount: " )"
  chosen=$(input $mounted "Choose drive to UNmount")
  if [[ $(input "No|Yes" $chosen) == "Yes" ]]; then
    udisksctl unmount -b "${chosen%% *}"
    notify-send "Usb-mount" "usb-device ${chosen%% *} unmounted"
  fi
}

main() {
  choice=$(input "Mount|Unmount|Exit" "Choose action")
  case "$choice" in
  "Mount") mount ;;

  "Unmount") unmount ;;

  *) exit 1 ;;
  esac
}

[[ "${BASH_SOURCE[0]}" == "${0}" ]] && main "$@"

# vim: ts=2 sts=2 sw=2 et
